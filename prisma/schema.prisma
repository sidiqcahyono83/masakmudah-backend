<<<<<<< HEAD
=======
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

>>>>>>> 6384b14d0220f74b334ebe8e1e3feb5618cfd21f
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
<<<<<<< HEAD
  id           String         @id @default(cuid())
  username     String         @unique
  fullname     String?
  email        String         @unique
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  password     Password?
  savedRecipes SavedRecipes[]
  Recipes      Recipes[]
}

model Password {
  id     String @id @default(cuid())
  hash   String
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
}

model SavedRecipes {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  recipesId String
  recipes   Recipes  @relation(fields: [recipesId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Recipes {
  id                 String @id @default(cuid())
  recipe             String
  description        String
  imageURL           String
  slug               String
  ingredients        String
  cookingIntructions String

  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  SavedRecipes SavedRecipes[]
  Categories   Categories[]
}

model Categories {
  id        String   @id @default(cuid())
  name      String
  recipeId  String
  recipes   Recipes  @relation(fields: [recipeId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
=======
  id       String    @id @default(cuid())
  username String    @unique
  password Password?
  email    String    @unique

  fullname    String?
  address     String?
  phoneNumber String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Password {
  id String @id @default(cuid())

  hash String

  use    User   @relation(fields: [userId], references: [id])
  userId String @unique
}
>>>>>>> 6384b14d0220f74b334ebe8e1e3feb5618cfd21f
